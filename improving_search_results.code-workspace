PUT /synonyms?include_type_name=true
{
  "settings": {
    "analysis": {
      "filter": {
        "synonym_test": {
          "type": "synonym", 
          "synonyms": [
            "awful => terrible",
            "awesome => great, super",
            "elasticsearch, logstash, kibana => elk",
            "weird, strange"
          ]
        }
      },
      "analyzer": {
        "my_analyzer": {
          "tokenizer": "standard",
          "filter": [
            "lowercase",
            "synonym_test"
          ]
        }
      }
    }
  },
  "mappings": {
    "_doc": {
      "properties": {
        "description": {
          "type": "text",
          "analyzer": "my_analyzer"
        }
      }
    }
  }
}
GET /synonyms/_analyze
{
  "analyzer": "my_analyzer",
  "text": "awesome"
}
GET /synonyms/_analyze
{
  "analyzer": "my_analyzer",
  "text": "Elasticsearch"
}
GET /synonyms/_analyze
{
  "analyzer": "my_analyzer",
  "text": "weird"
}
GET /synonyms/_analyze
{
  "analyzer": "my_analyzer",
  "text": "Elasticsearch is awesome, but can also seeem weird sometimes."
}
POST /synonyms/_doc
{
  "description":"Elasticsearch is awesome, but can also seeem weird sometimes."
}

# Even though the only oducment in this index, which is inserted above, does not contain the word 'great', we get it in the result, because awesome in the document is replaced by great as specified in 'synonyms'
GET /synonyms/_search
{
  "query": {
    "match": {
      "description": "great"
    }
  }
}

GET /synonyms/_search
{
  "query": {
    "match": {
      "description": "awesome"
    }
  }
}

# ------ Highlighting matching fields----------------------
POST /highlighting/_doc/1
{
  "description": "Let me tell you a story about Elasticsearch. It's a full-text search engine that is built on Apache Lucene. It's really easy to use, but also packs lots of advanced features that you can use to tweak its searching capabilities. Lots of well-known and established companies use Elasticsearch, and so should you!"
}
GET /highlighting/_doc/_search
{
  "query":{
    "match": {
      "description": "Elasticsearch story"
    }
  },
  "highlight":{
    "fields": {
      "description": {}
    }
  }
}

PUT /stemming_test?include_type_name=true
{
  "settings": {
    "analysis": {
      "filter": {
        "synonym_test": {
          "type": "synonym",
          "synonyms": [
            "firm => company",
            "love, enjoy"
          ]
        },
        "stemmer_test" : {
          "type" : "stemmer",
          "name" : "english"
        }
      },
      "analyzer": {
        "my_analyzer": {
          "tokenizer": "standard",
          "filter": [
            "lowercase",
            "synonym_test",
            "stemmer_test"
          ]
        }
      }
    }
  },
  "mappings": {
    "_doc": {
      "properties": {
        "description": {
          "type": "text",
          "analyzer": "my_analyzer"
        }
      }
    }
  }
}

POST /stemming_test/_doc/1
{
  "description":"I love working for my firm!"
}

GET /stemming_test/_search
{
  "query": {
    "match": {
      "description": "enjoy working"
    }
  }
}
